// Generated by view binder compiler. Do not edit!
package com.fakestore.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.fakestore.R;
import com.google.android.material.appbar.AppBarLayout;
import com.google.android.material.appbar.MaterialToolbar;
import com.google.android.material.textfield.TextInputEditText;
import com.google.android.material.textfield.TextInputLayout;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class LayoutHomeTopAppBarBinding implements ViewBinding {
  @NonNull
  private final AppBarLayout rootView;

  @NonNull
  public final AppBarLayout homeAppBarLayout;

  @NonNull
  public final TextInputEditText homeSearchEditText;

  @NonNull
  public final TextInputLayout searchOutlinedTextLayout;

  @NonNull
  public final MaterialToolbar topAppBar;

  private LayoutHomeTopAppBarBinding(@NonNull AppBarLayout rootView,
      @NonNull AppBarLayout homeAppBarLayout, @NonNull TextInputEditText homeSearchEditText,
      @NonNull TextInputLayout searchOutlinedTextLayout, @NonNull MaterialToolbar topAppBar) {
    this.rootView = rootView;
    this.homeAppBarLayout = homeAppBarLayout;
    this.homeSearchEditText = homeSearchEditText;
    this.searchOutlinedTextLayout = searchOutlinedTextLayout;
    this.topAppBar = topAppBar;
  }

  @Override
  @NonNull
  public AppBarLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static LayoutHomeTopAppBarBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static LayoutHomeTopAppBarBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.layout_home_top_app_bar, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static LayoutHomeTopAppBarBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      AppBarLayout homeAppBarLayout = (AppBarLayout) rootView;

      id = R.id.home_search_edit_text;
      TextInputEditText homeSearchEditText = ViewBindings.findChildViewById(rootView, id);
      if (homeSearchEditText == null) {
        break missingId;
      }

      id = R.id.searchOutlinedTextLayout;
      TextInputLayout searchOutlinedTextLayout = ViewBindings.findChildViewById(rootView, id);
      if (searchOutlinedTextLayout == null) {
        break missingId;
      }

      id = R.id.topAppBar;
      MaterialToolbar topAppBar = ViewBindings.findChildViewById(rootView, id);
      if (topAppBar == null) {
        break missingId;
      }

      return new LayoutHomeTopAppBarBinding((AppBarLayout) rootView, homeAppBarLayout,
          homeSearchEditText, searchOutlinedTextLayout, topAppBar);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
