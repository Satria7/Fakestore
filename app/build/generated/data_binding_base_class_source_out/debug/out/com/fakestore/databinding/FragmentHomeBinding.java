// Generated by view binder compiler. Do not edit!
package com.fakestore.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.EditText;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.ProgressBar;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.SearchView;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.fakestore.R;
import com.google.android.material.card.MaterialCardView;
import com.google.android.material.chip.Chip;
import com.google.android.material.chip.ChipGroup;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentHomeBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final Chip AllCategories;

  @NonNull
  public final ChipGroup categoryChipGroup;

  @NonNull
  public final Chip electronicsCategory;

  @NonNull
  public final SearchView homeSearchView;

  @NonNull
  public final RecyclerView homerecyclerview;

  @NonNull
  public final Chip jewelery;

  @NonNull
  public final ImageView logoutIcon;

  @NonNull
  public final Chip menscloth;

  @NonNull
  public final ProgressBar progressBar;

  @NonNull
  public final MaterialCardView searchCard;

  @NonNull
  public final EditText searchEditText;

  @NonNull
  public final TextView textViewError;

  @NonNull
  public final TextView textViewRefresh;

  private FragmentHomeBinding(@NonNull LinearLayout rootView, @NonNull Chip AllCategories,
      @NonNull ChipGroup categoryChipGroup, @NonNull Chip electronicsCategory,
      @NonNull SearchView homeSearchView, @NonNull RecyclerView homerecyclerview,
      @NonNull Chip jewelery, @NonNull ImageView logoutIcon, @NonNull Chip menscloth,
      @NonNull ProgressBar progressBar, @NonNull MaterialCardView searchCard,
      @NonNull EditText searchEditText, @NonNull TextView textViewError,
      @NonNull TextView textViewRefresh) {
    this.rootView = rootView;
    this.AllCategories = AllCategories;
    this.categoryChipGroup = categoryChipGroup;
    this.electronicsCategory = electronicsCategory;
    this.homeSearchView = homeSearchView;
    this.homerecyclerview = homerecyclerview;
    this.jewelery = jewelery;
    this.logoutIcon = logoutIcon;
    this.menscloth = menscloth;
    this.progressBar = progressBar;
    this.searchCard = searchCard;
    this.searchEditText = searchEditText;
    this.textViewError = textViewError;
    this.textViewRefresh = textViewRefresh;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentHomeBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentHomeBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_home, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentHomeBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.AllCategories;
      Chip AllCategories = ViewBindings.findChildViewById(rootView, id);
      if (AllCategories == null) {
        break missingId;
      }

      id = R.id.categoryChipGroup;
      ChipGroup categoryChipGroup = ViewBindings.findChildViewById(rootView, id);
      if (categoryChipGroup == null) {
        break missingId;
      }

      id = R.id.electronicsCategory;
      Chip electronicsCategory = ViewBindings.findChildViewById(rootView, id);
      if (electronicsCategory == null) {
        break missingId;
      }

      id = R.id.home_search_view;
      SearchView homeSearchView = ViewBindings.findChildViewById(rootView, id);
      if (homeSearchView == null) {
        break missingId;
      }

      id = R.id.homerecyclerview;
      RecyclerView homerecyclerview = ViewBindings.findChildViewById(rootView, id);
      if (homerecyclerview == null) {
        break missingId;
      }

      id = R.id.jewelery;
      Chip jewelery = ViewBindings.findChildViewById(rootView, id);
      if (jewelery == null) {
        break missingId;
      }

      id = R.id.logoutIcon;
      ImageView logoutIcon = ViewBindings.findChildViewById(rootView, id);
      if (logoutIcon == null) {
        break missingId;
      }

      id = R.id.menscloth;
      Chip menscloth = ViewBindings.findChildViewById(rootView, id);
      if (menscloth == null) {
        break missingId;
      }

      id = R.id.progressBar;
      ProgressBar progressBar = ViewBindings.findChildViewById(rootView, id);
      if (progressBar == null) {
        break missingId;
      }

      id = R.id.searchCard;
      MaterialCardView searchCard = ViewBindings.findChildViewById(rootView, id);
      if (searchCard == null) {
        break missingId;
      }

      id = R.id.searchEditText;
      EditText searchEditText = ViewBindings.findChildViewById(rootView, id);
      if (searchEditText == null) {
        break missingId;
      }

      id = R.id.text_view_error;
      TextView textViewError = ViewBindings.findChildViewById(rootView, id);
      if (textViewError == null) {
        break missingId;
      }

      id = R.id.text_view_refresh;
      TextView textViewRefresh = ViewBindings.findChildViewById(rootView, id);
      if (textViewRefresh == null) {
        break missingId;
      }

      return new FragmentHomeBinding((LinearLayout) rootView, AllCategories, categoryChipGroup,
          electronicsCategory, homeSearchView, homerecyclerview, jewelery, logoutIcon, menscloth,
          progressBar, searchCard, searchEditText, textViewError, textViewRefresh);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
