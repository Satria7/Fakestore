// Generated by Dagger (https://dagger.dev).
package com.fakestore.ViewModel;

import com.fakestore.Repository.ProductRepository;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import javax.inject.Provider;

@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class CartViewModel_Factory implements Factory<CartViewModel> {
  private final Provider<ProductRepository> repositoryProvider;

  public CartViewModel_Factory(Provider<ProductRepository> repositoryProvider) {
    this.repositoryProvider = repositoryProvider;
  }

  @Override
  public CartViewModel get() {
    return newInstance(repositoryProvider.get());
  }

  public static CartViewModel_Factory create(Provider<ProductRepository> repositoryProvider) {
    return new CartViewModel_Factory(repositoryProvider);
  }

  public static CartViewModel newInstance(ProductRepository repository) {
    return new CartViewModel(repository);
  }
}
