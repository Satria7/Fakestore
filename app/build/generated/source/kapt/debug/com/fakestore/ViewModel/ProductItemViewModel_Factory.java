// Generated by Dagger (https://dagger.dev).
package com.fakestore.ViewModel;

import androidx.lifecycle.SavedStateHandle;
import com.fakestore.Repository.ProductRepository;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import javax.inject.Provider;

@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class ProductItemViewModel_Factory implements Factory<ProductItemViewModel> {
  private final Provider<SavedStateHandle> stateProvider;

  private final Provider<ProductRepository> repositoryProvider;

  public ProductItemViewModel_Factory(Provider<SavedStateHandle> stateProvider,
      Provider<ProductRepository> repositoryProvider) {
    this.stateProvider = stateProvider;
    this.repositoryProvider = repositoryProvider;
  }

  @Override
  public ProductItemViewModel get() {
    return newInstance(stateProvider.get(), repositoryProvider.get());
  }

  public static ProductItemViewModel_Factory create(Provider<SavedStateHandle> stateProvider,
      Provider<ProductRepository> repositoryProvider) {
    return new ProductItemViewModel_Factory(stateProvider, repositoryProvider);
  }

  public static ProductItemViewModel newInstance(SavedStateHandle state,
      ProductRepository repository) {
    return new ProductItemViewModel(state, repository);
  }
}
